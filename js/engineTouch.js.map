{"version":3,"sources":["src/engineTouch.js"],"names":[],"mappings":"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","file":"engineTouch.js","sourcesContent":["import Block from 'js/block';\n\nexport default class MineSweeper {\n    constructor(options) {\n        this.options = options;\n\n        this._initGame();\n        this.setLevel('Easy');\n        this._startGame();\n    }\n\n    _initGame() {\n        this.gameArea = document.getElementById(this.options.gameArea);\n\n        // menu\n        const menuWrapper = document.createElement('div');\n        menuWrapper.className = 'menu';\n        menuWrapper.innerHTML = '<span>Menu</span>';\n        this._menu = document.createElement('ul');\n        this._menu.innerHTML = '<li>Start</li><a class=\"gap\"></a><li class=\"current\">Easy</li><li>Normal</li><li>Hard</li><li>Custom</li>';\n        menuWrapper.appendChild(this._menu);\n        this.gameArea.appendChild(menuWrapper);\n\n        const menuButton = menuWrapper.getElementsByTagName('span')[0];\n        // event for menu show\n        menuButton.addEventListener('click', (event)=> {\n            this._menu.style.display = 'block';\n            menuButton.className = 'on';\n            event.stopPropagation();\n        });\n        // event for menu hide\n        window.addEventListener('click', (event)=> {\n            this._menu.style.display = 'none';\n            menuButton.className = '';\n        });\n        // event for menu click\n        this._menu.addEventListener('click', (event)=> {\n            if (event.srcElement.nodeName === 'LI') {\n                if (event.srcElement.innerText === 'Start') {\n                    this._initMap();\n                } else {\n                    this.setLevel(event.srcElement.innerText);\n                }\n            }\n        });\n        // for custom level setter\n        this._levelSel = document.createElement('div');\n        this._levelSel.className = 'custom-level';\n        this._levelSel.innerHTML = `\n            <form>\n                <p>Width: <input type=\"text\" title=\"width\"></p>\n                <p>Height: <input type=\"text\" title=\"height\"></p>\n                <p>Mines: <input type=\"text\" title=\"mines\"></p>\n                <div><input type=\"submit\" value=\"Submit\"></div>\n                <div><input type=\"button\" value=\"Cancel\"></div>\n            </form>`;\n        this.gameArea.appendChild(this._levelSel);\n\n        const mainGame = document.createElement('div');\n        mainGame.className = 'main-game';\n        //mines left, face, and timer;\n        const digitalWrapper = document.createElement('div');\n        digitalWrapper.className = 'digital-wrapper';\n        this._mines = document.createElement('span');\n        this._time = document.createElement('span');\n        this._time.innerHTML = '000';\n        this._face = document.createElement('div');\n\n        digitalWrapper.appendChild(this._mines);\n        digitalWrapper.appendChild(this._face);\n        digitalWrapper.appendChild(this._time);\n        mainGame.appendChild(digitalWrapper);\n\n        this._face.addEventListener('click', ()=> {\n            this._initMap();\n        });\n\n        // game canvas\n        this.canvas = document.createElement('canvas');\n        this.canvas.innerText = 'Your browser does not support canvas, please upgrade your browser.';\n        mainGame.appendChild(this.canvas);\n\n        this.gameArea.appendChild(mainGame);\n\n        // init block\n        Block.size = this.options.blockSize;\n        Block.ctx = this.canvas.getContext('2d');\n    }\n\n    _initMap() {\n        // set mines count\n        this._mines.innerText = this._addZero(this.options.mineTotal);\n\n        this.gameArea.style.width = this.options.blockSize * this.options.columns + 'px';\n        // for retina display\n        this.canvas.width = this.options.blockSize * this.options.columns;\n        this.canvas.height = this.options.blockSize * this.options.rows;\n        this.canvas.style.width = this.options.blockSize * this.options.columns + 'px';\n        this.canvas.style.height = this.options.blockSize * this.options.rows + 'px';\n\n        this.firstTouch = true;\n        this.selectingLevel = false;\n        this.gameOver = false;\n        this.win = false;\n        this._face.className = 'normal';\n        clearInterval(this.timer);\n\n        this.map = [];\n        for (let i = 0; i < this.options.rows; i++) {\n            this.map[i] = [];\n            for (let j = 0; j < this.options.columns; j++) {\n                this.map[i][j] = new Block('cover', 0, i, j);\n                this.map[i][j].draw(false);\n            }\n        }\n    }\n\n    _setMines(coor) {\n        // generate mines\n        const mines = [];\n        for (let i = 0; i < this.options.rows * this.options.columns; i++) {\n            if (i < this.options.mineTotal) {\n                mines[i] = -1;\n            } else {\n                mines[i] = 0;\n            }\n        }\n\n        // shuffle mines\n\n        // use [Fisher-Yates shuffle] to shuffle mines\n        for (let i = this.options.rows * this.options.columns - 1; i > 0; i--) {\n            const ran = Math.floor(Math.random() * i);\n\n            let temp = mines[i];\n            mines[i] = mines[ran];\n            mines[ran] = temp;\n        }\n\n        // the block at first touch position can not be mine\n        const firstPosition = coor.i * this.options.columns + coor.j;\n        while (mines[firstPosition] === -1) {\n            const ran = Math.floor(Math.random() * this.options.rows * this.options.columns)\n            if (mines[ran] === 0) {\n                let temp = mines[firstPosition];\n                mines[firstPosition] = mines[ran];\n                mines[ran] = temp;\n            }\n        }\n\n        // set mines\n        for (let i = 0; i < this.options.rows; i++) {\n            for (let j = 0; j < this.options.columns; j++) {\n                this.map[i][j].number = mines[i * this.options.columns + j];\n            }\n        }\n\n        // calculate numbers\n        for (let i = 0; i < this.options.rows; i++) {\n            for (let j = 0; j < this.options.columns; j++) {\n                if (this.map[i][j].number !== -1) {\n                    for (let x = i - 1; x <= i + 1; x++) {\n                        for (let y = j - 1; y <= j + 1; y++) {\n                            if (x < this.options.rows && x >= 0 && y < this.options.columns && y >= 0 && this.map[x][y].number === -1) {\n                                this.map[i][j].number++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // set timer\n        this._time.innerText = '000';\n        this.timer = setInterval(()=> {\n            this.time = 'add';\n        }, 1000);\n    }\n\n    _updateMap(method, coor) {\n        // gameover, do not respond any touch event\n        if (this.gameOver || this.win || this.selectingLevel) {\n            return;\n        }\n\n        // for double tap on a unknown block\n        if (method === 'db' && this.map[coor.i][coor.j].type !== 'blank' && this.map[coor.i][coor.j].type !== 'number') {\n            switch (this.map[coor.i][coor.j].type) {\n                case 'cover':\n                    this.map[coor.i][coor.j].type = 'flag';\n                    this.mines = -1;\n                    break;\n                case 'flag':\n                    this.map[coor.i][coor.j].type = 'question';\n                    this.mines = 1;\n                    break;\n                case 'question':\n                    this.map[coor.i][coor.j].type = 'cover';\n                    break;\n            }\n        }\n\n        // for single touch on unknown block\n        if (coor !== false && method === 't' && this.map[coor.i][coor.j].type === 'cover') {\n            if (this.firstTouch) {\n                this.firstTouch = false;\n                this._setMines(coor);\n            }\n\n            if (this.map[coor.i][coor.j].number === -1) {\n                this._gameOver(coor);\n                return;\n            } else if (this.map[coor.i][coor.j].number === 0) {\n                this._expandMap(coor);\n            } else {\n                this.map[coor.i][coor.j].type = 'number';\n            }\n        }\n\n        // for double tap on a known block\n        if (coor !== false && method === 'db' && ( this.map[coor.i][coor.j].type === 'blank' || this.map[coor.i][coor.j].type === 'number')) {\n            if (this.map[coor.i][coor.j].type === 'number') {\n                // count flag around coor\n                let flags = 0;\n                for (let x = coor.i - 1; x <= coor.i + 1; x++) {\n                    for (let y = coor.j - 1; y <= coor.j + 1; y++) {\n                        if (x < this.options.rows && x >= 0 && y < this.options.columns && y >= 0 && this.map[x][y].type === 'flag') {\n                            flags++;\n                        }\n                    }\n                }\n                // expand map\n                if (flags === this.map[coor.i][coor.j].number) {\n                    for (let x = coor.i - 1; x <= coor.i + 1; x++) {\n                        for (let y = coor.j - 1; y <= coor.j + 1; y++) {\n                            if (x < this.options.rows && x >= 0 && y < this.options.columns && y >= 0 && this.map[x][y].type === 'cover') {\n                                switch (this.map[x][y].number) {\n                                    case 0:\n                                        this._expandMap({i: x, j: y});\n                                        break;\n                                    case -1:\n                                        this._gameOver({i: x, j: y});\n                                        return;\n                                    default:\n                                        this.map[x][y].type = 'number';\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // updateframe\n        this.win = true;\n        for (let i = 0; i < this.options.rows; i++) {\n            for (let j = 0; j < this.options.columns; j++) {\n                if (this.map[i][j].number !== -1 && this.map[i][j].type !== 'number' && this.map[i][j].type !== 'blank') {\n                    this.win = false;\n                }\n\n                this.map[i][j].draw(false);\n            }\n        }\n        if (this.win) {\n            this._gameWin();\n        }\n    }\n\n    _expandMap(coor) {\n        if (coor.i < this.options.rows && coor.i >= 0 && coor.j < this.options.columns && coor.j >= 0) {\n            // in map area\n            if (this.map[coor.i][coor.j].number === 0) {\n                if (this.map[coor.i][coor.j].type !== 'blank') {\n                    // blank, expand\n                    this.map[coor.i][coor.j].type = 'blank';\n                    // expend at left, right, up, down\n                    this._expandMap({i: coor.i, j: coor.j - 1});\n                    this._expandMap({i: coor.i, j: coor.j + 1});\n                    this._expandMap({i: coor.i + 1, j: coor.j - 1});\n                    this._expandMap({i: coor.i + 1, j: coor.j + 1});\n                    this._expandMap({i: coor.i - 1, j: coor.j - 1});\n                    this._expandMap({i: coor.i - 1, j: coor.j + 1});\n                    this._expandMap({i: coor.i - 1, j: coor.j});\n                    this._expandMap({i: coor.i + 1, j: coor.j});\n                }\n            } else {\n                // number, stop expand\n                this.map[coor.i][coor.j].type = 'number';\n            }\n        }\n    }\n\n    _startGame() {\n        const timeGap = 300;\n        let lastTouchCoor = {i: 0, j: 0};\n        let lastTouchTime = 0;\n        let timer = null;\n\n        const getBlockPosition = (x, y)=> {\n            const j = Math.floor(x / this.options.blockSize);\n            const i = Math.floor(y / this.options.blockSize);\n            if (i < this.options.rows && i >= 0 && j < this.options.columns && j >= 0) {\n                return {i: i, j: j};\n            } else {\n                return false;\n            }\n        };\n\n        this.canvas.addEventListener('touchstart', (event)=> {\n            const coor = getBlockPosition(event.targetTouches[0].pageX - this.clientRect.left, event.targetTouches[0].pageY - this.clientRect.top);\n\n            let touchCancel = false;\n            let touchMethod = null;\n            // allow one block offset\n            console.log(Math.abs(lastTouchCoor.i - coor.i) + Math.abs(lastTouchCoor.j - coor.j));\n            console.log(Date.now() - lastTouchTime);\n            if ((Math.abs(lastTouchCoor.i - coor.i) + Math.abs(lastTouchCoor.j - coor.j) < 2) && Date.now() - lastTouchTime < timeGap) {\n                // double touch\n                clearTimeout(timer);\n                touchMethod = 'db';\n            } else {\n                // single touch\n                touchMethod = 't';\n                lastTouchCoor.i = coor.i;\n                lastTouchCoor.j = coor.j;\n            }\n            // update current touch\n            lastTouchTime = Date.now();\n\n            const touchMove = (event)=> {\n                if (touchCancel) {\n                    return;\n                }\n                var rect = event.target.getBoundingClientRect();\n                const coor = getBlockPosition(event.changedTouches[0].pageX - this.clientRect.left, event.changedTouches[0].pageY - this.clientRect.top);\n                // offset more than two blocks\n                if (Math.abs(lastTouchCoor.i - coor.i) + Math.abs(lastTouchCoor.j - coor.j) >= 2) {\n                    touchCancel = true;\n                }\n            };\n\n            const touchEnd = (event)=> {\n                if (!touchCancel) {\n                    if (touchMethod === 'db') {\n                        this._updateMap('db', coor);\n                    } else {\n                        timer = setTimeout(()=> {\n                            this._updateMap('t', coor);\n                        }, timeGap)\n                    }\n                }\n                window.removeEventListener('touchmove', touchMove);\n                window.removeEventListener('touchend', touchEnd);\n            };\n            //\n            window.addEventListener('touchmove', touchMove);\n            window.addEventListener('touchend', touchEnd);\n        });\n    }\n\n    _gameOver(coor) {\n        this.gameOver = true;\n        // show all mines\n        for (let i = 0; i < this.options.rows; i++) {\n            for (let j = 0; j < this.options.columns; j++) {\n                if (i === coor.i && j === coor.j) {\n                    // the mine user clicked\n                    this.map[i][j].drawBoom();\n                } else if (this.map[i][j].number === -1) {\n                    // is mine, not shown\n                    if (this.map[i][j].type === 'cover' || this.map[i][j].type === 'question') {\n                        this.map[i][j].drawMine();\n                    }\n                } else if (this.map[i][j].type === 'flag') {\n                    // not mine, but flagged\n                    this.map[i][j].drawWrong();\n                }\n            }\n        }\n        // stop timer\n        clearInterval(this.timer);\n        // change face\n        this._face.className = 'failed';\n    }\n\n    _gameWin() {\n        // show all mines\n        for (let i = 0; i < this.options.rows; i++) {\n            for (let j = 0; j < this.options.columns; j++) {\n                if (this.map[i][j].number === -1 && this.map[i][j].type !== 'flag') {\n                    // mine, but not flagged\n                    this.map[i][j].type = 'flag';\n                    this.map[i][j].draw(false);\n                }\n            }\n        }\n        // stop timer\n        clearInterval(this.timer);\n        // clear mines\n        this._mines.innerText = '000';\n        // change face\n        this._face.className = 'win';\n    }\n\n    _addZero(data, length) {\n        length = length || 3;\n        data = data + '';\n        while (data.length < length) {\n            data = '0' + data;\n        }\n        return data;\n    }\n\n    setLevel(level) {\n        switch (level) {\n            case 'Easy':\n                this.options.rows = 9;\n                this.options.columns = 9;\n                this.options.mineTotal = 10;\n                this._menu.innerHTML = '<li>Start</li><a class=\"gap\"></a><li class=\"current\">Easy</li><li>Normal</li><li>Hard</li><li>Custom</li>';\n                break;\n            case 'Normal':\n                this.options.rows = 16;\n                this.options.columns = 16;\n                this.options.mineTotal = 40;\n                this._menu.innerHTML = '<li>Start</li><a class=\"gap\"></a><li>Easy</li><li class=\"current\">Normal</li><li>Hard</li><li>Custom</li>';\n                break;\n            case 'Hard':\n                this.options.rows = 16;\n                this.options.columns = 30;\n                this.options.mineTotal = 99;\n                this._menu.innerHTML = '<li>Start</li><a class=\"gap\"></a><li>Easy</li><li>Normal</li><li class=\"current\">Hard</li><li>Custom</li>';\n                break;\n            case 'Custom':\n                clearInterval(this.timer);\n                this.selectingLevel = true;\n                // append current data\n                const inputs = this._levelSel.getElementsByTagName('input');\n                inputs[0].value = this.options.columns;\n                inputs[1].value = this.options.rows;\n                inputs[2].value = this.options.mineTotal;\n                // add button listener\n                inputs[3].addEventListener('click', (event)=> {\n                    this._menu.innerHTML = '<li>Start</li><a class=\"gap\"></a><li>Easy</li><li>Normal</li><li>Hard</li><li class=\"current\">Custom</li>';\n                    this._levelSel.style.display = 'none';\n                    const options = {\n                        rows: parseInt(inputs[1].value),\n                        columns: parseInt(inputs[0].value),\n                        mineTotal: parseInt(inputs[2].value)\n                    };\n                    this.options = options;\n                    this._initMap();\n                    event.preventDefault();\n                });\n                inputs[4].addEventListener('click', (event)=> {\n                    this._levelSel.style.display = 'none';\n                    this.selectingLevel = false;\n                });\n                // show level selector\n                this._levelSel.style.display = 'block';\n                return;\n            default:\n                console.error('minesweeper: no such difficulty');\n        }\n\n        window.scrollTo(0, 0);\n        this.clientRect = this.canvas.getBoundingClientRect();\n\n        this._initMap();\n    }\n\n    set mines(num) {\n        this._mines.innerText = this._addZero(parseInt(this._mines.innerText) + num);\n    }\n\n    set time(str) {\n        const time = parseInt(this._time.innerText) + 1;\n        if (time >= 999) {\n            clearInterval(this.timer);\n        }\n        this._time.innerText = this._addZero(time);\n    }\n\n    set options(_options) {\n        const options = {\n            gameArea: '',\n            rows: 0,\n            columns: 0,\n            mineTotal: 0\n        };\n\n        for (let key in options) {\n            if (_options[key] !== undefined) {\n                options[key] = _options[key];\n            }\n        }\n        // max/min rows && colums && mines\n        if (options.rows > 30) {\n            options.rows = 30;\n        }\n        if (options.rows < 9) {\n            options.rows = 9;\n        }\n        if (options.columns > 40) {\n            options.columns = 40;\n        }\n        if (options.columns < 9) {\n            options.columns = 9;\n        }\n        if (options.mineTotal > options.rows * options.columns / 4) {\n            options.mineTotal = Math.floor(options.rows * options.columns / 4);\n        }\n        if (options.mineTotal < options.rows * options.columns / 8) {\n            options.mineTotal = Math.floor(options.rows * options.columns / 8);\n        }\n        // can not set by users\n        options.blockSize = 40;\n\n        this._options = options;\n    }\n\n    get options() {\n        return this._options;\n    }\n}"]}